/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { StakedShare, StakedShareInterface } from "../StakedShare";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "projectToken_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "NFTId",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "NFTId",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "projectToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "revToken",
    outputs: [
      {
        internalType: "uint64",
        name: "created",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "locked",
        type: "uint64",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rsId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "lock",
        type: "uint128",
      },
    ],
    name: "stake",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162002bb638038062002bb68339810160408190526200003491620001be565b604080518082018252600d81526c2932bb32b73ab2902a37b5b2b760991b602080830191825283518085019094526002845261149560f21b908401528151919291620000839160009162000118565b5080516200009990600190602084019062000118565b50506001600655506001600160a01b038116620001065760405162461bcd60e51b815260206004820152602160248201527f73686f756c64206861766520612076616c696420746f6b656e206164647265736044820152607360f81b606482015260840160405180910390fd5b6001600160a01b03166080526200022d565b8280546200012690620001f0565b90600052602060002090601f0160209004810192826200014a576000855562000195565b82601f106200016557805160ff191683800117855562000195565b8280016001018555821562000195579182015b828111156200019557825182559160200191906001019062000178565b50620001a3929150620001a7565b5090565b5b80821115620001a35760008155600101620001a8565b600060208284031215620001d157600080fd5b81516001600160a01b0381168114620001e957600080fd5b9392505050565b600181811c908216806200020557607f821691505b602082108114156200022757634e487b7160e01b600052602260045260246000fd5b50919050565b6080516129586200025e600039600081816102090152818161058c01528181610fed01526114fc01526129586000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80636352211e116100b2578063a604b10111610081578063b88d4fde11610066578063b88d4fde14610300578063c87b56dd14610313578063e985e9c51461032657600080fd5b8063a604b1011461027a578063b702ab111461028357600080fd5b80636352211e1461022b57806370a082311461023e57806395d89b411461025f578063a22cb4651461026757600080fd5b8063095ea7b3116101095780632e1a7d4d116100ee5780632e1a7d4d146101de57806342842e0e146101f15780634b60ce771461020457600080fd5b8063095ea7b3146101b657806323b872dd146101cb57600080fd5b806301ffc9a71461013b57806306fdde031461016357806307fd876314610178578063081812fc1461018b575b600080fd5b61014e610149366004611f92565b610362565b60405190151581526020015b60405180910390f35b61016b6103b4565b60405161015a9190612007565b61014e610186366004612036565b610446565b61019e610199366004612069565b6107db565b6040516001600160a01b03909116815260200161015a565b6101c96101c4366004612099565b610870565b005b6101c96101d93660046120c3565b610986565b61014e6101ec366004612069565b610a0d565b6101c96101ff3660046120c3565b610c5b565b61019e7f000000000000000000000000000000000000000000000000000000000000000081565b61019e610239366004612069565b610c76565b61025161024c3660046120ff565b610d01565b60405190815260200161015a565b61016b610d9b565b6101c9610275366004612128565b610daa565b61025160085481565b6102d0610291366004612069565b60076020526000908152604090205467ffffffffffffffff8082169168010000000000000000810490911690600160801b90046001600160801b031683565b6040805167ffffffffffffffff94851681529390921660208401526001600160801b03169082015260600161015a565b6101c961030e366004612175565b610db9565b61016b610321366004612069565b610e47565b61014e610334366004612251565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061039357506001600160e01b03198216635b5e139f60e01b145b806103ae57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546103c39061227b565b80601f01602080910402602001604051908101604052809291908181526020018280546103ef9061227b565b801561043c5780601f106104115761010080835404028352916020019161043c565b820191906000526020600020905b81548152906001019060200180831161041f57829003601f168201915b5050505050905090565b6000600260065414156104a05760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026006556001600160801b0383166104fb5760405162461bcd60e51b815260206004820152601960248201527f796f752073686f756c642073656e6420736f6d657468696e67000000000000006044820152606401610497565b600061050a62093a80846122cc565b63ffffffff1690506301e133808111156105665760405162461bcd60e51b815260206004820181905260248201527f796f752073686f756c64206c6f636b206c657373207468616e203120796561726044820152606401610497565b604051636eb1769f60e11b81523360048201523060248201526001600160801b038516907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063dd62ed3e9060440160206040518083038186803b1580156105d657600080fd5b505afa1580156105ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060e91906122f8565b101561065c5760405162461bcd60e51b815260206004820152601160248201527f746f6b656e206e6f7420616c6c6f7765640000000000000000000000000000006044820152606401610497565b61066f33856001600160801b0316610f40565b6106bb5760405162461bcd60e51b815260206004820152601360248201527f7472616e736665722066726f6d206661696c73000000000000000000000000006044820152606401610497565b6008600081546106ca90612311565b9182905550600881905560408051808201909152601781527f6e657720726576656e756520736861726520746f6b656e000000000000000000602082015261071391339161101d565b6040805160608101825267ffffffffffffffff428116825283811660208084019182526001600160801b03808a16858701818152600880546000908152600790955288852097518854965192518516600160801b0292881668010000000000000000026fffffffffffffffffffffffffffffffff19909716971696909617949094179091169290921790935590549251909133917f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee909190a46001915050600160065592915050565b6000818152600260205260408120546001600160a01b03166108545760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610497565b506000908152600460205260409020546001600160a01b031690565b600061087b82610c76565b9050806001600160a01b0316836001600160a01b031614156108e95760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610497565b336001600160a01b038216148061090557506109058133610334565b6109775760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610497565b610981838361109b565b505050565b6109903382611109565b610a025760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610497565b610981838383611200565b600060026006541415610a625760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610497565b600260065533610a7183610c76565b6001600160a01b031614610ad25760405162461bcd60e51b815260206004820152602260248201527f796f7520617265206e6f7420746865206f776e6572206f662074686520746f6b60448201526132b760f11b6064820152608401610497565b60008281526007602090815260408083208151606081018352905467ffffffffffffffff808216808452680100000000000000008304909116948301859052600160801b9091046001600160801b0316928201929092529291610b349161232c565b67ffffffffffffffff16905080421015610b905760405162461bcd60e51b815260206004820152601760248201527f796f757220746f6b656e206974206973206c6f636b65640000000000000000006044820152606401610497565b610b99846113b4565b60008481526007602052604080822091909155820151610bc39033906001600160801b031661144f565b610c0f5760405162461bcd60e51b815260206004820152601a60248201527f7472616e736665722072657761726420746f6b656e206661696c0000000000006044820152606401610497565b604080830151905185916001600160801b03169033907f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc690600090a46001925050506001600655919050565b61098183838360405180602001604052806000815250610db9565b6000818152600260205260408120546001600160a01b0316806103ae5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e00000000000000000000000000000000000000000000006064820152608401610497565b60006001600160a01b038216610d7f5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f2061646472657373000000000000000000000000000000000000000000006064820152608401610497565b506001600160a01b031660009081526003602052604090205490565b6060600180546103c39061227b565b610db5338383611522565b5050565b610dc33383611109565b610e355760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610497565b610e41848484846115f1565b50505050565b6000818152600260205260409020546060906001600160a01b0316610ed45760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006064820152608401610497565b6000828152600760209081526040918290208251606081018452905467ffffffffffffffff808216808452680100000000000000008304909116938301849052600160801b9091046001600160801b03169382018490529092610f399286929061166f565b9392505050565b60006001600160a01b038316610f985760405162461bcd60e51b815260206004820152601560248201527f6d7573742062652076616c6964206164647265737300000000000000000000006044820152606401610497565b60008211610fe85760405162461bcd60e51b815260206004820152601760248201527f796f75206d7573742073656e6420736f6d657468696e670000000000000000006044820152606401610497565b6110147f00000000000000000000000000000000000000000000000000000000000000008430856117c3565b50600192915050565b6110278383611843565b6110346000848484611985565b6109815760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610497565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906110d082610c76565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166111825760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610497565b600061118d83610c76565b9050806001600160a01b0316846001600160a01b031614806111c85750836001600160a01b03166111bd846107db565b6001600160a01b0316145b806111f857506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661121382610c76565b6001600160a01b03161461128f5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e00000000000000000000000000000000000000000000006064820152608401610497565b6001600160a01b0382166112f15760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610497565b6112fc60008261109b565b6001600160a01b0383166000908152600360205260408120805460019290611325908490612358565b90915550506001600160a01b038216600090815260036020526040812080546001929061135390849061236f565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60006113bf82610c76565b90506113cc60008361109b565b6001600160a01b03811660009081526003602052604081208054600192906113f5908490612358565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006001600160a01b0383166114a75760405162461bcd60e51b815260206004820152601560248201527f6d7573742062652076616c6964206164647265737300000000000000000000006044820152606401610497565b600082116114f75760405162461bcd60e51b815260206004820152601760248201527f796f75206d7573742073656e6420736f6d657468696e670000000000000000006044820152606401610497565b6110147f00000000000000000000000000000000000000000000000000000000000000008484611add565b816001600160a01b0316836001600160a01b031614156115845760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610497565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6115fc848484611200565b61160884848484611985565b610e415760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610497565b606060405180610120016040528060fd815260200161280f60fd913990508061169786611b0d565b6040516020016116a8929190612387565b6040516020818303038152906040529050806116cc856001600160801b0316611b0d565b6040516020016116dd92919061241a565b6040516020818303038152906040529050806117028467ffffffffffffffff16611b0d565b6040516020016117139291906124ad565b6040516020818303038152906040529050806117388367ffffffffffffffff16611b0d565b604051602001611749929190612540565b6040516020818303038152906040529050600061179661176887611b0d565b61177184611c23565b6040516020016117829291906125c2565b604051602081830303815290604052611c23565b9050806040516020016117a991906126c4565b604051602081830303815290604052915050949350505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610e419085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b031990931692909217909152611d89565b6001600160a01b0382166118995760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610497565b6000818152600260205260409020546001600160a01b0316156118fe5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610497565b6001600160a01b038216600090815260036020526040812080546001929061192790849061236f565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b15611ad257604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906119c9903390899088908890600401612709565b602060405180830381600087803b1580156119e357600080fd5b505af1925050508015611a13575060408051601f3d908101601f19168201909252611a1091810190612745565b60015b611ab8573d808015611a41576040519150601f19603f3d011682016040523d82523d6000602084013e611a46565b606091505b508051611ab05760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610497565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506111f8565b506001949350505050565b6040516001600160a01b03831660248201526044810182905261098190849063a9059cbb60e01b906064016117f7565b606081611b315750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611b5b5780611b4581612311565b9150611b549050600a83612778565b9150611b35565b60008167ffffffffffffffff811115611b7657611b7661215f565b6040519080825280601f01601f191660200182016040528015611ba0576020820181803683370190505b5090505b84156111f857611bb5600183612358565b9150611bc2600a8661278c565b611bcd90603061236f565b60f81b818381518110611be257611be26127a0565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611c1c600a86612778565b9450611ba4565b805160609080611c43575050604080516020810190915260008152919050565b60006003611c5283600261236f565b611c5c9190612778565b611c679060046127b6565b90506000611c7682602061236f565b67ffffffffffffffff811115611c8e57611c8e61215f565b6040519080825280601f01601f191660200182016040528015611cb8576020820181803683370190505b509050600060405180606001604052806040815260200161290c604091399050600181016020830160005b86811015611d44576003818a01810151603f601282901c8116860151600c83901c8216870151600684901c831688015192909316870151600891821b60ff94851601821b92841692909201901b91160160e01b835260049092019101611ce3565b506003860660018114611d5e5760028114611d6f57611d7b565b613d3d60f01b600119830152611d7b565b603d60f81b6000198301525b505050918152949350505050565b6000611dde826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611e6e9092919063ffffffff16565b8051909150156109815780806020019051810190611dfc91906127d5565b6109815760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610497565b60606111f8848460008585843b611ec75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610497565b600080866001600160a01b03168587604051611ee391906127f2565b60006040518083038185875af1925050503d8060008114611f20576040519150601f19603f3d011682016040523d82523d6000602084013e611f25565b606091505b5091509150611f35828286611f40565b979650505050505050565b60608315611f4f575081610f39565b825115611f5f5782518084602001fd5b8160405162461bcd60e51b81526004016104979190612007565b6001600160e01b031981168114611f8f57600080fd5b50565b600060208284031215611fa457600080fd5b8135610f3981611f79565b60005b83811015611fca578181015183820152602001611fb2565b83811115610e415750506000910152565b60008151808452611ff3816020860160208601611faf565b601f01601f19169290920160200192915050565b602081526000610f396020830184611fdb565b80356001600160801b038116811461203157600080fd5b919050565b6000806040838503121561204957600080fd5b6120528361201a565b91506120606020840161201a565b90509250929050565b60006020828403121561207b57600080fd5b5035919050565b80356001600160a01b038116811461203157600080fd5b600080604083850312156120ac57600080fd5b6120b583612082565b946020939093013593505050565b6000806000606084860312156120d857600080fd5b6120e184612082565b92506120ef60208501612082565b9150604084013590509250925092565b60006020828403121561211157600080fd5b610f3982612082565b8015158114611f8f57600080fd5b6000806040838503121561213b57600080fd5b61214483612082565b915060208301356121548161211a565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561218b57600080fd5b61219485612082565b93506121a260208601612082565b925060408501359150606085013567ffffffffffffffff808211156121c657600080fd5b818701915087601f8301126121da57600080fd5b8135818111156121ec576121ec61215f565b604051601f8201601f19908116603f011681019083821181831017156122145761221461215f565b816040528281528a602084870101111561222d57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561226457600080fd5b61226d83612082565b915061206060208401612082565b600181811c9082168061228f57607f821691505b602082108114156122b057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600063ffffffff808316818516818304811182151516156122ef576122ef6122b6565b02949350505050565b60006020828403121561230a57600080fd5b5051919050565b6000600019821415612325576123256122b6565b5060010190565b600067ffffffffffffffff80831681851680830382111561234f5761234f6122b6565b01949350505050565b60008282101561236a5761236a6122b6565b500390565b60008219821115612382576123826122b6565b500190565b60008351612399818460208801611faf565b7f746f6b656e3a200000000000000000000000000000000000000000000000000090830190815283516123d3816007840160208801611faf565b7f3c2f746578743e3c7465787420783d2231302220793d2234302220636c61737360079290910191820152671e913130b9b2911f60c11b6027820152602f01949350505050565b6000835161242c818460208801611faf565b7f616d6f756e743a200000000000000000000000000000000000000000000000009083019081528351612466816008840160208801611faf565b7f3c2f746578743e3c7465787420783d2231302220793d2236302220636c61737360089290910191820152671e913130b9b2911f60c11b6028820152603001949350505050565b600083516124bf818460208801611faf565b7f637265617465645f74696d653a2000000000000000000000000000000000000090830190815283516124f981600e840160208801611faf565b7f3c2f746578743e3c7465787420783d2231302220793d2238302220636c617373600e9290910191820152671e913130b9b2911f60c11b602e820152603601949350505050565b60008351612552818460208801611faf565b7f6c6f636b65645f74696d653a2000000000000000000000000000000000000000908301908152835161258c81600d840160208801611faf565b7f3c2f746578743e3c2f7376673e00000000000000000000000000000000000000600d9290910191820152601a01949350505050565b7f7b226e616d65223a20226c6f636b2023000000000000000000000000000000008152600083516125fa816010850160208801611faf565b7f222c20226465736372697074696f6e223a20224e465420526576656e756520736010918401918201527f686172652c2063616e206265207573656420746f20726563656976652070617360308201527f7369766520696e636f6d65222c2022696d616765223a2022646174613a696d6160508201527f67652f7376672b786d6c3b6261736536342c0000000000000000000000000000607082015283516126a9816082840160208801611faf565b61227d60f01b60829290910191820152608401949350505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c0000008152600082516126fc81601d850160208701611faf565b91909101601d0192915050565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261273b6080830184611fdb565b9695505050505050565b60006020828403121561275757600080fd5b8151610f3981611f79565b634e487b7160e01b600052601260045260246000fd5b60008261278757612787612762565b500490565b60008261279b5761279b612762565b500690565b634e487b7160e01b600052603260045260246000fd5b60008160001904831182151516156127d0576127d06122b6565b500290565b6000602082840312156127e757600080fd5b8151610f398161211a565b60008251612804818460208701611faf565b919091019291505056fe3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f73766722207072657365727665417370656374526174696f3d22784d696e594d696e206d656574222076696577426f783d223020302033353020333530223e3c7374796c653e2e62617365207b2066696c6c3a2077686974653b20666f6e742d66616d696c793a2073657269663b20666f6e742d73697a653a20313470783b207d3c2f7374796c653e3c726563742077696474683d223130302522206865696768743d2231303025222066696c6c3d22626c61636b22202f3e3c7465787420783d2231302220793d2232302220636c6173733d2262617365223e4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa164736f6c6343000809000a";

type StakedShareConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakedShareConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakedShare__factory extends ContractFactory {
  constructor(...args: StakedShareConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "StakedShare";
  }

  deploy(
    projectToken_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StakedShare> {
    return super.deploy(projectToken_, overrides || {}) as Promise<StakedShare>;
  }
  getDeployTransaction(
    projectToken_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(projectToken_, overrides || {});
  }
  attach(address: string): StakedShare {
    return super.attach(address) as StakedShare;
  }
  connect(signer: Signer): StakedShare__factory {
    return super.connect(signer) as StakedShare__factory;
  }
  static readonly contractName: "StakedShare";
  public readonly contractName: "StakedShare";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakedShareInterface {
    return new utils.Interface(_abi) as StakedShareInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakedShare {
    return new Contract(address, _abi, signerOrProvider) as StakedShare;
  }
}
