/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RevenueShare, RevenueShareInterface } from "../RevenueShare";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "projectToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "rewardToken_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_projectToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_rewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "revToken",
    outputs: [
      {
        internalType: "uint64",
        name: "created",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "locked",
        type: "uint64",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rsId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "lock",
        type: "uint128",
      },
    ],
    name: "stake",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620028ac380380620028ac83398101604081905262000034916200036e565b8351849084906200004d906000906020850190620001de565b50805162000063906001906020840190620001de565b50506001600655508351620000b45760405162461bcd60e51b815260206004820152601260248201527173686f756c6420686176652061206e616d6560701b60448201526064015b60405180910390fd5b6000835111620001075760405162461bcd60e51b815260206004820152601460248201527f73686f756c64206861766520612073796d626f6c0000000000000000000000006044820152606401620000ab565b6001600160a01b038216620001585760405162461bcd60e51b815260206004820152602160248201526000805160206200288c8339815191526044820152607360f81b6064820152608401620000ab565b6001600160a01b038116620001a95760405162461bcd60e51b815260206004820152602160248201526000805160206200288c8339815191526044820152607360f81b6064820152608401620000ab565b600780546001600160a01b039384166001600160a01b03199182161790915560088054929093169116179055506200043a9050565b828054620001ec90620003fd565b90600052602060002090601f0160209004810192826200021057600085556200025b565b82601f106200022b57805160ff19168380011785556200025b565b828001600101855582156200025b579182015b828111156200025b5782518255916020019190600101906200023e565b50620002699291506200026d565b5090565b5b808211156200026957600081556001016200026e565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620002ac57600080fd5b81516001600160401b0380821115620002c957620002c962000284565b604051601f8301601f19908116603f01168101908282118183101715620002f457620002f462000284565b816040528381526020925086838588010111156200031157600080fd5b600091505b8382101562000335578582018301518183018401529082019062000316565b83821115620003475760008385830101525b9695505050505050565b80516001600160a01b03811681146200036957600080fd5b919050565b600080600080608085870312156200038557600080fd5b84516001600160401b03808211156200039d57600080fd5b620003ab888389016200029a565b95506020870151915080821115620003c257600080fd5b50620003d1878288016200029a565b935050620003e26040860162000351565b9150620003f26060860162000351565b905092959194509250565b600181811c908216806200041257607f821691505b602082108114156200043457634e487b7160e01b600052602260045260246000fd5b50919050565b612442806200044a6000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c806395d89b41116100b2578063b59c6e0e11610081578063b88d4fde11610066578063b88d4fde146102ec578063c87b56dd146102ff578063e985e9c51461031257600080fd5b8063b59c6e0e1461025c578063b702ab111461026f57600080fd5b806395d89b41146102255780639bbaf1281461022d578063a22cb46514610240578063a604b1011461025357600080fd5b8063095ea7b31161010957806342842e0e116100ee57806342842e0e146101de5780636352211e146101f157806370a082311461020457600080fd5b8063095ea7b3146101b657806323b872dd146101cb57600080fd5b806301ffc9a71461013b57806306fdde031461016357806307fd876314610178578063081812fc1461018b575b600080fd5b61014e610149366004611aa8565b61034e565b60405190151581526020015b60405180910390f35b61016b6103a0565b60405161015a9190611b1d565b61014e610186366004611b4c565b610432565b61019e610199366004611b7f565b61078c565b6040516001600160a01b03909116815260200161015a565b6101c96101c4366004611baf565b610821565b005b6101c96101d9366004611bd9565b610937565b6101c96101ec366004611bd9565b6109be565b61019e6101ff366004611b7f565b6109d9565b610217610212366004611c15565b610a64565b60405190815260200161015a565b61016b610afe565b60075461019e906001600160a01b031681565b6101c961024e366004611c3e565b610b0d565b610217600a5481565b60085461019e906001600160a01b031681565b6102bc61027d366004611b7f565b60096020526000908152604090205467ffffffffffffffff8082169168010000000000000000810490911690600160801b90046001600160801b031683565b6040805167ffffffffffffffff94851681529390921660208401526001600160801b03169082015260600161015a565b6101c96102fa366004611c8b565b610b1c565b61016b61030d366004611b7f565b610baa565b61014e610320366004611d67565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061037f57506001600160e01b03198216635b5e139f60e01b145b8061039a57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546103af90611d91565b80601f01602080910402602001604051908101604052809291908181526020018280546103db90611d91565b80156104285780601f106103fd57610100808354040283529160200191610428565b820191906000526020600020905b81548152906001019060200180831161040b57829003601f168201915b5050505050905090565b60006002600654141561048c5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026006556001600160801b0383166104e75760405162461bcd60e51b815260206004820152601960248201527f796f752073686f756c642073656e6420736f6d657468696e67000000000000006044820152606401610483565b60006104f662093a8084611de2565b63ffffffff1690506301e133808111156105525760405162461bcd60e51b815260206004820181905260248201527f796f752073686f756c64206c6f636b206c657373207468616e203120796561726044820152606401610483565b600754604051636eb1769f60e11b81523360048201523060248201526001600160801b038616916001600160a01b03169063dd62ed3e9060440160206040518083038186803b1580156105a457600080fd5b505afa1580156105b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105dc9190611e0e565b101561062a5760405162461bcd60e51b815260206004820152601160248201527f746f6b656e206e6f7420616c6c6f7765640000000000000000000000000000006044820152606401610483565b60075461064b9033906001600160a01b03166001600160801b038716610ca3565b6106975760405162461bcd60e51b815260206004820152601360248201527f7472616e736665722066726f6d206661696c73000000000000000000000000006044820152606401610483565b6000600a600081546106a890611e27565b91905081905590506106f033826040518060400160405280601781526020017f6e657720726576656e756520736861726520746f6b656e000000000000000000815250610cbb565b6106fc33306001610d39565b6040805160608101825267ffffffffffffffff428116825293841660208083019182526001600160801b03808a16848601908152600096875260099092529390942091518254915194518416600160801b0294861668010000000000000000026fffffffffffffffffffffffffffffffff1990921695169490941793909317161790555060018060065592915050565b6000818152600260205260408120546001600160a01b03166108055760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610483565b506000908152600460205260409020546001600160a01b031690565b600061082c826109d9565b9050806001600160a01b0316836001600160a01b0316141561089a5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610483565b336001600160a01b03821614806108b657506108b68133610320565b6109285760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610483565b6109328383610e08565b505050565b6109413382610e83565b6109b35760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610483565b610932838383610f7a565b61093283838360405180602001604052806000815250610b1c565b6000818152600260205260408120546001600160a01b03168061039a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e00000000000000000000000000000000000000000000006064820152608401610483565b60006001600160a01b038216610ae25760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f2061646472657373000000000000000000000000000000000000000000006064820152608401610483565b506001600160a01b031660009081526003602052604090205490565b6060600180546103af90611d91565b610b18338383610d39565b5050565b610b263383610e83565b610b985760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610483565b610ba48484848461113b565b50505050565b6000818152600260205260409020546060906001600160a01b0316610c375760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006064820152608401610483565b6000828152600960209081526040918290208251606081018452905467ffffffffffffffff808216808452680100000000000000008304909116938301849052600160801b9091046001600160801b03169382018490529092610c9c928692906111b9565b9392505050565b6000610cb18385308561130d565b5060019392505050565b610cc5838361137c565b610cd260008484846114cb565b6109325760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610483565b816001600160a01b0316836001600160a01b03161415610d9b5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610483565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384169081179091558190610e4a826109d9565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b0316610efc5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610483565b6000610f07836109d9565b9050806001600160a01b0316846001600160a01b03161480610f425750836001600160a01b0316610f378461078c565b6001600160a01b0316145b80610f7257506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316610f8d826109d9565b6001600160a01b0316146110095760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e00000000000000000000000000000000000000000000006064820152608401610483565b6001600160a01b03821661106b5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610483565b611076600082610e08565b6001600160a01b038316600090815260036020526040812080546001929061109f908490611e42565b90915550506001600160a01b03821660009081526003602052604081208054600192906110cd908490611e59565b9091555050600081815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b611146848484610f7a565b611152848484846114cb565b610ba45760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610483565b606060405180610120016040528060fd81526020016122f960fd91399050806111e186611623565b6040516020016111f2929190611e71565b604051602081830303815290604052905080611216856001600160801b0316611623565b604051602001611227929190611f04565b60405160208183030381529060405290508061124c8467ffffffffffffffff16611623565b60405160200161125d929190611f97565b6040516020818303038152906040529050806112828367ffffffffffffffff16611623565b60405160200161129392919061202a565b604051602081830303815290604052905060006112e06112b287611623565b6112bb84611739565b6040516020016112cc9291906120ac565b604051602081830303815290604052611739565b9050806040516020016112f391906121ae565b604051602081830303815290604052915050949350505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b179052610ba490859061189f565b6001600160a01b0382166113d25760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610483565b6000818152600260205260409020546001600160a01b0316156114375760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610483565b6001600160a01b0382166000908152600360205260408120805460019290611460908490611e59565b9091555050600081815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b1561161857604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061150f9033908990889088906004016121f3565b602060405180830381600087803b15801561152957600080fd5b505af1925050508015611559575060408051601f3d908101601f191682019092526115569181019061222f565b60015b6115fe573d808015611587576040519150601f19603f3d011682016040523d82523d6000602084013e61158c565b606091505b5080516115f65760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610483565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610f72565b506001949350505050565b6060816116475750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611671578061165b81611e27565b915061166a9050600a83612262565b915061164b565b60008167ffffffffffffffff81111561168c5761168c611c75565b6040519080825280601f01601f1916602001820160405280156116b6576020820181803683370190505b5090505b8415610f72576116cb600183611e42565b91506116d8600a86612276565b6116e3906030611e59565b60f81b8183815181106116f8576116f861228a565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611732600a86612262565b94506116ba565b805160609080611759575050604080516020810190915260008152919050565b60006003611768836002611e59565b6117729190612262565b61177d9060046122a0565b9050600061178c826020611e59565b67ffffffffffffffff8111156117a4576117a4611c75565b6040519080825280601f01601f1916602001820160405280156117ce576020820181803683370190505b50905060006040518060600160405280604081526020016123f6604091399050600181016020830160005b8681101561185a576003818a01810151603f601282901c8116860151600c83901c8216870151600684901c831688015192909316870151600891821b60ff94851601821b92841692909201901b91160160e01b8352600490920191016117f9565b506003860660018114611874576002811461188557611891565b613d3d60f01b600119830152611891565b603d60f81b6000198301525b505050918152949350505050565b60006118f4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166119849092919063ffffffff16565b805190915015610932578080602001905181019061191291906122bf565b6109325760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610483565b6060610f72848460008585843b6119dd5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610483565b600080866001600160a01b031685876040516119f991906122dc565b60006040518083038185875af1925050503d8060008114611a36576040519150601f19603f3d011682016040523d82523d6000602084013e611a3b565b606091505b5091509150611a4b828286611a56565b979650505050505050565b60608315611a65575081610c9c565b825115611a755782518084602001fd5b8160405162461bcd60e51b81526004016104839190611b1d565b6001600160e01b031981168114611aa557600080fd5b50565b600060208284031215611aba57600080fd5b8135610c9c81611a8f565b60005b83811015611ae0578181015183820152602001611ac8565b83811115610ba45750506000910152565b60008151808452611b09816020860160208601611ac5565b601f01601f19169290920160200192915050565b602081526000610c9c6020830184611af1565b80356001600160801b0381168114611b4757600080fd5b919050565b60008060408385031215611b5f57600080fd5b611b6883611b30565b9150611b7660208401611b30565b90509250929050565b600060208284031215611b9157600080fd5b5035919050565b80356001600160a01b0381168114611b4757600080fd5b60008060408385031215611bc257600080fd5b611bcb83611b98565b946020939093013593505050565b600080600060608486031215611bee57600080fd5b611bf784611b98565b9250611c0560208501611b98565b9150604084013590509250925092565b600060208284031215611c2757600080fd5b610c9c82611b98565b8015158114611aa557600080fd5b60008060408385031215611c5157600080fd5b611c5a83611b98565b91506020830135611c6a81611c30565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215611ca157600080fd5b611caa85611b98565b9350611cb860208601611b98565b925060408501359150606085013567ffffffffffffffff80821115611cdc57600080fd5b818701915087601f830112611cf057600080fd5b813581811115611d0257611d02611c75565b604051601f8201601f19908116603f01168101908382118183101715611d2a57611d2a611c75565b816040528281528a6020848701011115611d4357600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215611d7a57600080fd5b611d8383611b98565b9150611b7660208401611b98565b600181811c90821680611da557607f821691505b60208210811415611dc657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600063ffffffff80831681851681830481118215151615611e0557611e05611dcc565b02949350505050565b600060208284031215611e2057600080fd5b5051919050565b6000600019821415611e3b57611e3b611dcc565b5060010190565b600082821015611e5457611e54611dcc565b500390565b60008219821115611e6c57611e6c611dcc565b500190565b60008351611e83818460208801611ac5565b7f746f6b656e2000000000000000000000000000000000000000000000000000009083019081528351611ebd816006840160208801611ac5565b7f3c2f746578743e3c7465787420783d2231302220793d2234302220636c61737360069290910191820152671e913130b9b2911f60c11b6026820152602e01949350505050565b60008351611f16818460208801611ac5565b7f616d6f756e7420000000000000000000000000000000000000000000000000009083019081528351611f50816007840160208801611ac5565b7f3c2f746578743e3c7465787420783d2231302220793d2236302220636c61737360079290910191820152671e913130b9b2911f60c11b6027820152602f01949350505050565b60008351611fa9818460208801611ac5565b7f637265617465645f74696d6520000000000000000000000000000000000000009083019081528351611fe381600d840160208801611ac5565b7f3c2f746578743e3c7465787420783d2231302220793d2238302220636c617373600d9290910191820152671e913130b9b2911f60c11b602d820152603501949350505050565b6000835161203c818460208801611ac5565b7f6c6f636b65645f74696d65200000000000000000000000000000000000000000908301908152835161207681600c840160208801611ac5565b7f3c2f746578743e3c2f7376673e00000000000000000000000000000000000000600c9290910191820152601901949350505050565b7f7b226e616d65223a20226c6f636b2023000000000000000000000000000000008152600083516120e4816010850160208801611ac5565b7f222c20226465736372697074696f6e223a20224e465420526576656e756520736010918401918201527f686172652c2063616e206265207573656420746f20726563656976652070617360308201527f7369766520696e636f6d65222c2022696d616765223a2022646174613a696d6160508201527f67652f7376672b786d6c3b6261736536342c000000000000000000000000000060708201528351612193816082840160208801611ac5565b61227d60f01b60829290910191820152608401949350505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c0000008152600082516121e681601d850160208701611ac5565b91909101601d0192915050565b60006001600160a01b038087168352808616602084015250836040830152608060608301526122256080830184611af1565b9695505050505050565b60006020828403121561224157600080fd5b8151610c9c81611a8f565b634e487b7160e01b600052601260045260246000fd5b6000826122715761227161224c565b500490565b6000826122855761228561224c565b500690565b634e487b7160e01b600052603260045260246000fd5b60008160001904831182151516156122ba576122ba611dcc565b500290565b6000602082840312156122d157600080fd5b8151610c9c81611c30565b600082516122ee818460208701611ac5565b919091019291505056fe3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f73766722207072657365727665417370656374526174696f3d22784d696e594d696e206d656574222076696577426f783d223020302033353020333530223e3c7374796c653e2e62617365207b2066696c6c3a2077686974653b20666f6e742d66616d696c793a2073657269663b20666f6e742d73697a653a20313470783b207d3c2f7374796c653e3c726563742077696474683d223130302522206865696768743d2231303025222066696c6c3d22626c61636b22202f3e3c7465787420783d2231302220793d2232302220636c6173733d2262617365223e4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa164736f6c6343000809000a73686f756c64206861766520612076616c696420746f6b656e20616464726573";

type RevenueShareConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RevenueShareConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RevenueShare__factory extends ContractFactory {
  constructor(...args: RevenueShareConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RevenueShare";
  }

  deploy(
    name_: string,
    symbol_: string,
    projectToken_: string,
    rewardToken_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RevenueShare> {
    return super.deploy(
      name_,
      symbol_,
      projectToken_,
      rewardToken_,
      overrides || {}
    ) as Promise<RevenueShare>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    projectToken_: string,
    rewardToken_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      projectToken_,
      rewardToken_,
      overrides || {}
    );
  }
  attach(address: string): RevenueShare {
    return super.attach(address) as RevenueShare;
  }
  connect(signer: Signer): RevenueShare__factory {
    return super.connect(signer) as RevenueShare__factory;
  }
  static readonly contractName: "RevenueShare";
  public readonly contractName: "RevenueShare";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RevenueShareInterface {
    return new utils.Interface(_abi) as RevenueShareInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RevenueShare {
    return new Contract(address, _abi, signerOrProvider) as RevenueShare;
  }
}
