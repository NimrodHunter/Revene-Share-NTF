/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { NFT, NFTInterface } from "../NFT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506118f0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101e1578063b88d4fde146101f4578063c87b56dd14610207578063e985e9c51461021a57600080fd5b80636352211e146101a557806370a08231146101b857806395d89b41146101d957600080fd5b8063095ea7b3116100c8578063095ea7b31461015757806323b872dd1461016c57806342842e0e1461017f5780634cd88b761461019257600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd366004611418565b61022d565b60405190151581526020015b60405180910390f35b61011f6102c7565b60405161010e919061148d565b61013f61013a3660046114a0565b61039a565b6040516001600160a01b03909116815260200161010e565b61016a6101653660046114d0565b610472565b005b61016a61017a3660046114fa565b6105c8565b61016a61018d3660046114fa565b61068f565b61016a6101a03660046115e2565b6106ea565b61013f6101b33660046114a0565b61077b565b6101cb6101c6366004611646565b610849565b60405190815260200161010e565b61011f610924565b61016a6101ef366004611661565b610974565b61016a61020236600461169d565b6109c3565b61011f6102153660046114a0565b610a91565b610102610228366004611719565b610bba565b60065460009060ff166102755760405162461bcd60e51b815260206004820152601e60248201526000805160206118c483398151915260448201526064015b60405180910390fd5b6001600160e01b031982166380ac58cd60e01b14806102a457506001600160e01b03198216635b5e139f60e01b145b806102bf57506301ffc9a760e01b6001600160e01b03198316145b90505b919050565b60065460609060ff1661030a5760405162461bcd60e51b815260206004820152601e60248201526000805160206118c4833981519152604482015260640161026c565b600080546103179061174c565b80601f01602080910402602001604051908101604052809291908181526020018280546103439061174c565b80156103905780601f1061036557610100808354040283529160200191610390565b820191906000526020600020905b81548152906001019060200180831161037357829003601f168201915b5050505050905090565b60065460009060ff166103dd5760405162461bcd60e51b815260206004820152601e60248201526000805160206118c4833981519152604482015260640161026c565b6000828152600260205260409020546001600160a01b03166104565760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161026c565b506000908152600460205260409020546001600160a01b031690565b60065460ff166104b25760405162461bcd60e51b815260206004820152601e60248201526000805160206118c4833981519152604482015260640161026c565b60006104bd8261077b565b9050806001600160a01b0316836001600160a01b0316141561052b5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161026c565b336001600160a01b038216148061054757506105478133610bba565b6105b95760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161026c565b6105c38383610c2c565b505050565b60065460ff166106085760405162461bcd60e51b815260206004820152601e60248201526000805160206118c4833981519152604482015260640161026c565b6106123382610ca7565b6106845760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f766564000000000000000000000000000000606482015260840161026c565b6105c3838383610d7e565b60065460ff166106cf5760405162461bcd60e51b815260206004820152601e60248201526000805160206118c4833981519152604482015260640161026c565b6105c3838383604051806020016040528060008152506109c3565b60065460ff161561073d5760405162461bcd60e51b815260206004820152601c60248201527f636f6e747261637420616c726561647920696e697469616c697a656400000000604482015260640161026c565b8151610750906000906020850190611366565b508051610764906001906020840190611366565b50506006805460ff19811660ff9091161517905550565b60065460009060ff166107be5760405162461bcd60e51b815260206004820152601e60248201526000805160206118c4833981519152604482015260640161026c565b6000828152600260205260409020546001600160a01b0316806102bf5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e0000000000000000000000000000000000000000000000606482015260840161026c565b60065460009060ff1661088c5760405162461bcd60e51b815260206004820152601e60248201526000805160206118c4833981519152604482015260640161026c565b6001600160a01b0382166109085760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f206164647265737300000000000000000000000000000000000000000000606482015260840161026c565b506001600160a01b031660009081526003602052604090205490565b60065460609060ff166109675760405162461bcd60e51b815260206004820152601e60248201526000805160206118c4833981519152604482015260640161026c565b600180546103179061174c565b60065460ff166109b45760405162461bcd60e51b815260206004820152601e60248201526000805160206118c4833981519152604482015260640161026c565b6109bf338383610f3f565b5050565b60065460ff16610a035760405162461bcd60e51b815260206004820152601e60248201526000805160206118c4833981519152604482015260640161026c565b610a0d3383610ca7565b610a7f5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f766564000000000000000000000000000000606482015260840161026c565b610a8b8484848461100e565b50505050565b60065460609060ff16610ad45760405162461bcd60e51b815260206004820152601e60248201526000805160206118c4833981519152604482015260640161026c565b6000828152600260205260409020546001600160a01b0316610b5e5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000606482015260840161026c565b6000610b68611097565b90506000815111610b885760405180602001604052806000815250610bb3565b80610b92846110ed565b604051602001610ba3929190611787565b6040516020818303038152906040525b9392505050565b60065460009060ff16610bfd5760405162461bcd60e51b815260206004820152601e60248201526000805160206118c4833981519152604482015260640161026c565b506001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384169081179091558190610c6e8261077b565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b0316610d205760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161026c565b6000610d2b8361077b565b9050806001600160a01b0316846001600160a01b03161480610d665750836001600160a01b0316610d5b8461039a565b6001600160a01b0316145b80610d765750610d768185610bba565b949350505050565b826001600160a01b0316610d918261077b565b6001600160a01b031614610e0d5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e0000000000000000000000000000000000000000000000606482015260840161026c565b6001600160a01b038216610e6f5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161026c565b610e7a600082610c2c565b6001600160a01b0383166000908152600360205260408120805460019290610ea39084906117cc565b90915550506001600160a01b0382166000908152600360205260408120805460019290610ed19084906117e3565b9091555050600081815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b03161415610fa15760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161026c565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611019848484610d7e565b61102584848484611203565b610a8b5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161026c565b60065460609060ff166110da5760405162461bcd60e51b815260206004820152601e60248201526000805160206118c4833981519152604482015260640161026c565b5060408051602081019091526000815290565b6060816111115750506040805180820190915260018152600360fc1b602082015290565b8160005b811561113b5780611125816117fb565b91506111349050600a8361182c565b9150611115565b60008167ffffffffffffffff81111561115657611156611536565b6040519080825280601f01601f191660200182016040528015611180576020820181803683370190505b5090505b8415610d76576111956001836117cc565b91506111a2600a86611840565b6111ad9060306117e3565b60f81b8183815181106111c2576111c2611854565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506111fc600a8661182c565b9450611184565b60006001600160a01b0384163b1561135b57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061124790339089908890889060040161186a565b602060405180830381600087803b15801561126157600080fd5b505af1925050508015611291575060408051601f3d908101601f1916820190925261128e918101906118a6565b60015b611341573d8080156112bf576040519150601f19603f3d011682016040523d82523d6000602084013e6112c4565b606091505b5080516113395760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161026c565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610d76565b506001949350505050565b8280546113729061174c565b90600052602060002090601f01602090048101928261139457600085556113da565b82601f106113ad57805160ff19168380011785556113da565b828001600101855582156113da579182015b828111156113da5782518255916020019190600101906113bf565b506113e69291506113ea565b5090565b5b808211156113e657600081556001016113eb565b6001600160e01b03198116811461141557600080fd5b50565b60006020828403121561142a57600080fd5b8135610bb3816113ff565b60005b83811015611450578181015183820152602001611438565b83811115610a8b5750506000910152565b60008151808452611479816020860160208601611435565b601f01601f19169290920160200192915050565b602081526000610bb36020830184611461565b6000602082840312156114b257600080fd5b5035919050565b80356001600160a01b03811681146102c257600080fd5b600080604083850312156114e357600080fd5b6114ec836114b9565b946020939093013593505050565b60008060006060848603121561150f57600080fd5b611518846114b9565b9250611526602085016114b9565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561156757611567611536565b604051601f8501601f19908116603f0116810190828211818310171561158f5761158f611536565b816040528093508581528686860111156115a857600080fd5b858560208301376000602087830101525050509392505050565b600082601f8301126115d357600080fd5b610bb38383356020850161154c565b600080604083850312156115f557600080fd5b823567ffffffffffffffff8082111561160d57600080fd5b611619868387016115c2565b9350602085013591508082111561162f57600080fd5b5061163c858286016115c2565b9150509250929050565b60006020828403121561165857600080fd5b610bb3826114b9565b6000806040838503121561167457600080fd5b61167d836114b9565b91506020830135801515811461169257600080fd5b809150509250929050565b600080600080608085870312156116b357600080fd5b6116bc856114b9565b93506116ca602086016114b9565b925060408501359150606085013567ffffffffffffffff8111156116ed57600080fd5b8501601f810187136116fe57600080fd5b61170d8782356020840161154c565b91505092959194509250565b6000806040838503121561172c57600080fd5b611735836114b9565b9150611743602084016114b9565b90509250929050565b600181811c9082168061176057607f821691505b6020821081141561178157634e487b7160e01b600052602260045260246000fd5b50919050565b60008351611799818460208801611435565b8351908301906117ad818360208801611435565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156117de576117de6117b6565b500390565b600082198211156117f6576117f66117b6565b500190565b600060001982141561180f5761180f6117b6565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261183b5761183b611816565b500490565b60008261184f5761184f611816565b500690565b634e487b7160e01b600052603260045260246000fd5b60006001600160a01b0380871683528086166020840152508360408301526080606083015261189c6080830184611461565b9695505050505050565b6000602082840312156118b857600080fd5b8151610bb3816113ff56fe636f6e7472616374206974206973206e6f7420696e697469616c697a65640000a164736f6c6343000809000a";

type NFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFT__factory extends ContractFactory {
  constructor(...args: NFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "NFT";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFT> {
    return super.deploy(overrides || {}) as Promise<NFT>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NFT {
    return super.attach(address) as NFT;
  }
  connect(signer: Signer): NFT__factory {
    return super.connect(signer) as NFT__factory;
  }
  static readonly contractName: "NFT";
  public readonly contractName: "NFT";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTInterface {
    return new utils.Interface(_abi) as NFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): NFT {
    return new Contract(address, _abi, signerOrProvider) as NFT;
  }
}
