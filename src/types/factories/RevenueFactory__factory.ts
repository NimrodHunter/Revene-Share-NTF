/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RevenueFactory,
  RevenueFactoryInterface,
} from "../RevenueFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "cryptobarter_",
        type: "address",
      },
      {
        internalType: "address",
        name: "feeOracle_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "clone",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Cloned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "claimables",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "revenue",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "blockNumber",
        type: "uint64",
      },
    ],
    name: "revenueShare",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "revenuesAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "";

type RevenueFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RevenueFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RevenueFactory__factory extends ContractFactory {
  constructor(...args: RevenueFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RevenueFactory";
  }

  deploy(
    cryptobarter_: string,
    feeOracle_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RevenueFactory> {
    return super.deploy(
      cryptobarter_,
      feeOracle_,
      overrides || {}
    ) as Promise<RevenueFactory>;
  }
  getDeployTransaction(
    cryptobarter_: string,
    feeOracle_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      cryptobarter_,
      feeOracle_,
      overrides || {}
    );
  }
  attach(address: string): RevenueFactory {
    return super.attach(address) as RevenueFactory;
  }
  connect(signer: Signer): RevenueFactory__factory {
    return super.connect(signer) as RevenueFactory__factory;
  }
  static readonly contractName: "RevenueFactory";
  public readonly contractName: "RevenueFactory";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RevenueFactoryInterface {
    return new utils.Interface(_abi) as RevenueFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RevenueFactory {
    return new Contract(address, _abi, signerOrProvider) as RevenueFactory;
  }
}
