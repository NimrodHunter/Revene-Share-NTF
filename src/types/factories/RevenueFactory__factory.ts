/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RevenueFactory,
  RevenueFactoryInterface,
} from "../RevenueFactory";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "clone",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Cloned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "address",
        name: "NFT",
        type: "address",
      },
      {
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "root_",
        type: "bytes32",
      },
    ],
    name: "revenueShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a33610023565b60018055610073565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610aa3806100826000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630ace0e9314610051578063715018a6146100665780638da5cb5b1461006e578063f2fde38b1461008d575b600080fd5b61006461005f366004610989565b6100a0565b005b610064610349565b600054604080516001600160a01b039092168252519081900360200190f35b61006461009b3660046109de565b6103af565b600260015414156100f85760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026001556000546001600160a01b031633146101575760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100ef565b8060001a60f81b7fff00000000000000000000000000000000000000000000000000000000000000166101cc5760405162461bcd60e51b815260206004820152600a60248201527f656d70747920726f6f740000000000000000000000000000000000000000000060448201526064016100ef565b6001600160a01b0383166102225760405162461bcd60e51b815260206004820152601c60248201527f72657761726420746f6b656e2073686f756c64206e6f7420626520300000000060448201526064016100ef565b600082116102725760405162461bcd60e51b815260206004820152601f60248201527f616d6f756e742073686f756c642062652067726561746572207468616e20300060448201526064016100ef565b600061027d86610491565b905061028a84828561054c565b5060405163d2d5f5b160e01b81526001600160a01b0386811660048301528581166024830152604482018590526064820184905282169063d2d5f5b190608401600060405180830381600087803b1580156102e457600080fd5b505af11580156102f8573d6000803e3d6000fd5b5050505082846001600160a01b0316826001600160a01b03167f327084004c66df9089f8472ad7c0df231245e325beb2f439c1452ce70daff72660405160405180910390a450506001805550505050565b6000546001600160a01b031633146103a35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100ef565b6103ad600061061c565b565b6000546001600160a01b031633146104095760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100ef565b6001600160a01b0381166104855760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016100ef565b61048e8161061c565b50565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f09150506001600160a01b0381166105475760405162461bcd60e51b815260206004820152601660248201527f455243313136373a20637265617465206661696c65640000000000000000000060448201526064016100ef565b919050565b60006001600160a01b0383166105a45760405162461bcd60e51b815260206004820152601560248201527f6d7573742062652076616c69642061646472657373000000000000000000000060448201526064016100ef565b600082116105f45760405162461bcd60e51b815260206004820152601760248201527f796f75206d7573742073656e6420736f6d657468696e6700000000000000000060448201526064016100ef565b6106118461060a6000546001600160a01b031690565b8585610684565b5060015b9392505050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b1790526106f39085906106f9565b50505050565b600061074e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166107e39092919063ffffffff16565b8051909150156107de578080602001905181019061076c91906109f9565b6107de5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016100ef565b505050565b60606107f284846000856107fa565b949350505050565b6060824710156108725760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016100ef565b843b6108c05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016100ef565b600080866001600160a01b031685876040516108dc9190610a47565b60006040518083038185875af1925050503d8060008114610919576040519150601f19603f3d011682016040523d82523d6000602084013e61091e565b606091505b509150915061092e828286610939565b979650505050505050565b60608315610948575081610615565b8251156109585782518084602001fd5b8160405162461bcd60e51b81526004016100ef9190610a63565b80356001600160a01b038116811461054757600080fd5b600080600080600060a086880312156109a157600080fd5b6109aa86610972565b94506109b860208701610972565b93506109c660408701610972565b94979396509394606081013594506080013592915050565b6000602082840312156109f057600080fd5b61061582610972565b600060208284031215610a0b57600080fd5b8151801515811461061557600080fd5b60005b83811015610a36578181015183820152602001610a1e565b838111156106f35750506000910152565b60008251610a59818460208701610a1b565b9190910192915050565b6020815260008251806020840152610a82816040850160208701610a1b565b601f01601f1916919091016040019291505056fea164736f6c6343000809000a";

type RevenueFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RevenueFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RevenueFactory__factory extends ContractFactory {
  constructor(...args: RevenueFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RevenueFactory";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RevenueFactory> {
    return super.deploy(overrides || {}) as Promise<RevenueFactory>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RevenueFactory {
    return super.attach(address) as RevenueFactory;
  }
  connect(signer: Signer): RevenueFactory__factory {
    return super.connect(signer) as RevenueFactory__factory;
  }
  static readonly contractName: "RevenueFactory";
  public readonly contractName: "RevenueFactory";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RevenueFactoryInterface {
    return new utils.Interface(_abi) as RevenueFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RevenueFactory {
    return new Contract(address, _abi, signerOrProvider) as RevenueFactory;
  }
}
