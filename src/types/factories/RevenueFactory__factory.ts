/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RevenueFactory,
  RevenueFactoryInterface,
} from "../RevenueFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "clone",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Cloned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "NFT",
        type: "address",
      },
      {
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "root_",
        type: "bytes32",
      },
    ],
    name: "revenueShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610b91380380610b9183398101604081905261002f916100f3565b610038336100a3565b6001600160a01b0381166100925760405162461bcd60e51b815260206004820152601760248201527f73686f756c64206e6f7420626520616464726573732030000000000000000000604482015260640160405180910390fd5b6001600160a01b0316608052610123565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561010557600080fd5b81516001600160a01b038116811461011c57600080fd5b9392505050565b608051610a5361013e60003960006103690152610a536000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638da5cb5b1461005b578063f2fde38b1461007a578063fc1fec571461008d575b600080fd5b6100596100a0565b005b600054604080516001600160a01b039092168252519081900360200190f35b61005961008836600461094c565b61010b565b61005961009b366004610967565b6101ed565b6000546001600160a01b031633146100ff5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6101096000610454565b565b6000546001600160a01b031633146101655760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100f6565b6001600160a01b0381166101e15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016100f6565b6101ea81610454565b50565b6000546001600160a01b031633146102475760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100f6565b8060001a60f81b7fff00000000000000000000000000000000000000000000000000000000000000166102bc5760405162461bcd60e51b815260206004820152600a60248201527f656d70747920726f6f740000000000000000000000000000000000000000000060448201526064016100f6565b6001600160a01b0383166103125760405162461bcd60e51b815260206004820152601c60248201527f72657761726420746f6b656e2073686f756c64206e6f7420626520300000000060448201526064016100f6565b600082116103625760405162461bcd60e51b815260206004820152601f60248201527f616d6f756e742073686f756c642062652067726561746572207468616e20300060448201526064016100f6565b600061038d7f00000000000000000000000000000000000000000000000000000000000000006104bc565b905061039a848285610577565b5060405163d2d5f5b160e01b81526001600160a01b0386811660048301528581166024830152604482018590526064820184905282169063d2d5f5b190608401600060405180830381600087803b1580156103f457600080fd5b505af1158015610408573d6000803e3d6000fd5b5050505082846001600160a01b0316826001600160a01b03167f327084004c66df9089f8472ad7c0df231245e325beb2f439c1452ce70daff72660405160405180910390a45050505050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f09150506001600160a01b0381166105725760405162461bcd60e51b815260206004820152601660248201527f455243313136373a20637265617465206661696c65640000000000000000000060448201526064016100f6565b919050565b60006001600160a01b0383166105cf5760405162461bcd60e51b815260206004820152601560248201527f6d7573742062652076616c69642061646472657373000000000000000000000060448201526064016100f6565b6000821161061f5760405162461bcd60e51b815260206004820152601760248201527f796f75206d7573742073656e6420736f6d657468696e6700000000000000000060448201526064016100f6565b61063c846106356000546001600160a01b031690565b8585610647565b5060015b9392505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b1790526106b69085906106bc565b50505050565b6000610711826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166107a69092919063ffffffff16565b8051909150156107a1578080602001905181019061072f91906109a9565b6107a15760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016100f6565b505050565b60606107b584846000856107bd565b949350505050565b6060824710156108355760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016100f6565b843b6108835760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016100f6565b600080866001600160a01b0316858760405161089f91906109f7565b60006040518083038185875af1925050503d80600081146108dc576040519150601f19603f3d011682016040523d82523d6000602084013e6108e1565b606091505b50915091506108f18282866108fc565b979650505050505050565b6060831561090b575081610640565b82511561091b5782518084602001fd5b8160405162461bcd60e51b81526004016100f69190610a13565b80356001600160a01b038116811461057257600080fd5b60006020828403121561095e57600080fd5b61064082610935565b6000806000806080858703121561097d57600080fd5b61098685610935565b935061099460208601610935565b93969395505050506040820135916060013590565b6000602082840312156109bb57600080fd5b8151801515811461064057600080fd5b60005b838110156109e65781810151838201526020016109ce565b838111156106b65750506000910152565b60008251610a098184602087016109cb565b9190910192915050565b6020815260008251806020840152610a328160408501602087016109cb565b601f01601f1916919091016040019291505056fea164736f6c6343000809000a";

type RevenueFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RevenueFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RevenueFactory__factory extends ContractFactory {
  constructor(...args: RevenueFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RevenueFactory";
  }

  deploy(
    implementation_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RevenueFactory> {
    return super.deploy(
      implementation_,
      overrides || {}
    ) as Promise<RevenueFactory>;
  }
  getDeployTransaction(
    implementation_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(implementation_, overrides || {});
  }
  attach(address: string): RevenueFactory {
    return super.attach(address) as RevenueFactory;
  }
  connect(signer: Signer): RevenueFactory__factory {
    return super.connect(signer) as RevenueFactory__factory;
  }
  static readonly contractName: "RevenueFactory";
  public readonly contractName: "RevenueFactory";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RevenueFactoryInterface {
    return new utils.Interface(_abi) as RevenueFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RevenueFactory {
    return new Contract(address, _abi, signerOrProvider) as RevenueFactory;
  }
}
