/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StakedShareFactory,
  StakedShareFactoryInterface,
} from "../StakedShareFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "cryptobarter_",
        type: "address",
      },
      {
        internalType: "address",
        name: "feeOracle_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "clone",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "projectToken",
        type: "address",
      },
    ],
    name: "Cloned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "projects",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "address",
        name: "projectToken",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "logo",
        type: "string",
      },
    ],
    name: "stakedShare",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610ca9380380610ca983398101604081905261002f916101af565b61003833610143565b600180556001600160a01b0382166100a35760405162461bcd60e51b8152602060048201526024808201527f63727970746f62617274657220616464726573732073686f756c64206e6f74206044820152630626520360e41b60648201526084015b60405180910390fd5b6001600160a01b0381166101035760405162461bcd60e51b815260206004820152602160248201527f6665654f7261636c6520616464726573732073686f756c64206e6f74206265206044820152600360fc1b606482015260840161009a565b60028054600160201b600160c01b0319166401000000006001600160a01b0394851602179055600380546001600160a01b031916919092161790556101e2565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146101aa57600080fd5b919050565b600080604083850312156101c257600080fd5b6101cb83610193565b91506101d960208401610193565b90509250929050565b610ab8806101f16000396000f3fe60806040526004361061005e5760003560e01c80638da5cb5b116100435780638da5cb5b14610157578063d2b121f11461017f578063f2fde38b14610192576100bf565b8063715018a6146101165780638b79543c1461012d576100bf565b366100bf5760405162461bcd60e51b815260206004820152602660248201527f6469726563746c7920657468207472616e736665727320617265206e6f7420616044820152651b1b1bddd95960d21b60648201526084015b60405180910390fd5b60405162461bcd60e51b815260206004820152602660248201527f6469726563746c7920657468207472616e736665727320617265206e6f7420616044820152651b1b1bddd95960d21b60648201526084016100b6565b34801561012257600080fd5b5061012b6101b2565b005b34801561013957600080fd5b5060025460405163ffffffff90911681526020015b60405180910390f35b34801561016357600080fd5b506000546040516001600160a01b03909116815260200161014e565b61012b61018d3660046108f0565b610218565b34801561019e57600080fd5b5061012b6101ad36600461099a565b6105ca565b6000546001600160a01b0316331461020c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100b6565b61021660006106ac565b565b6002600154141561026b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016100b6565b60026001556000546001600160a01b031633146102ca5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100b6565b6001600160a01b0385166103465760405162461bcd60e51b815260206004820152602660248201527f696d706c656d656e746174696f6e2073686f756c64206e6f742062652061646460448201527f726573732030000000000000000000000000000000000000000000000000000060648201526084016100b6565b6001600160a01b0384166103a85760405162461bcd60e51b8152602060048201526024808201527f72657761726420746f6b656e2073686f756c64206e6f742062652061646472656044820152630737320360e41b60648201526084016100b6565b600360009054906101000a90046001600160a01b03166001600160a01b031663b0ee793f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103f657600080fd5b505afa15801561040a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042e91906109bc565b341461047c5760405162461bcd60e51b815260206004820152600b60248201527f696e76616c69642066656500000000000000000000000000000000000000000060448201526064016100b6565b61048534610714565b6104d15760405162461bcd60e51b815260206004820152601260248201527f7472616e7366657220666565206661696c73000000000000000000000000000060448201526064016100b6565b60006104dc8661077b565b604051635f1e6f6d60e01b81529091506001600160a01b03821690635f1e6f6d90610511908890889088908890600401610a22565b600060405180830381600087803b15801561052b57600080fd5b505af115801561053f573d6000803e3d6000fd5b5050600280546001935090915060009061056090849063ffffffff16610a75565b92506101000a81548163ffffffff021916908363ffffffff160217905550846001600160a01b0316816001600160a01b03167fae93c8e84b9065113a0230417359f283712a933bdab9abc10fcb1179edc6b1c860405160405180910390a350506001805550505050565b6000546001600160a01b031633146106245760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100b6565b6001600160a01b0381166106a05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016100b6565b6106a9816106ac565b50565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60025460405160009182916401000000009091046001600160a01b03169084908381818185875af1925050503d806000811461076c576040519150601f19603f3d011682016040523d82523d6000602084013e610771565b606091505b5090949350505050565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f09150506001600160a01b0381166108315760405162461bcd60e51b815260206004820152601660248201527f455243313136373a20637265617465206661696c65640000000000000000000060448201526064016100b6565b919050565b80356001600160a01b038116811461083157600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f83011261087457600080fd5b813567ffffffffffffffff8082111561088f5761088f61084d565b604051601f8301601f19908116603f011681019082821181831017156108b7576108b761084d565b816040528381528660208588010111156108d057600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a0868803121561090857600080fd5b61091186610836565b945061091f60208701610836565b9350604086013567ffffffffffffffff8082111561093c57600080fd5b61094889838a01610863565b9450606088013591508082111561095e57600080fd5b61096a89838a01610863565b9350608088013591508082111561098057600080fd5b5061098d88828901610863565b9150509295509295909350565b6000602082840312156109ac57600080fd5b6109b582610836565b9392505050565b6000602082840312156109ce57600080fd5b5051919050565b6000815180845260005b818110156109fb576020818501810151868301820152016109df565b81811115610a0d576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0385168152608060208201526000610a4460808301866109d5565b8281036040840152610a5681866109d5565b90508281036060840152610a6a81856109d5565b979650505050505050565b600063ffffffff808316818516808303821115610aa257634e487b7160e01b600052601160045260246000fd5b0194935050505056fea164736f6c6343000809000a";

type StakedShareFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakedShareFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakedShareFactory__factory extends ContractFactory {
  constructor(...args: StakedShareFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "StakedShareFactory";
  }

  deploy(
    cryptobarter_: string,
    feeOracle_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StakedShareFactory> {
    return super.deploy(
      cryptobarter_,
      feeOracle_,
      overrides || {}
    ) as Promise<StakedShareFactory>;
  }
  getDeployTransaction(
    cryptobarter_: string,
    feeOracle_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      cryptobarter_,
      feeOracle_,
      overrides || {}
    );
  }
  attach(address: string): StakedShareFactory {
    return super.attach(address) as StakedShareFactory;
  }
  connect(signer: Signer): StakedShareFactory__factory {
    return super.connect(signer) as StakedShareFactory__factory;
  }
  static readonly contractName: "StakedShareFactory";
  public readonly contractName: "StakedShareFactory";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakedShareFactoryInterface {
    return new utils.Interface(_abi) as StakedShareFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakedShareFactory {
    return new Contract(address, _abi, signerOrProvider) as StakedShareFactory;
  }
}
